name: Publish to npm

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm install

      - name: Build package
        run: npm run build

      - name: Get and set new version
        id: version
        run: |
          PKG_NAME=$(node -p "require('./package.json').name")
          echo "Package name: $PKG_NAME"

          LATEST_VERSION=$(npm show "$PKG_NAME" version || echo "")
          echo "Current latest version: $LATEST_VERSION"

          if [ -z "$LATEST_VERSION" ]; then
            NEW_VERSION="1.0.0"
            echo "No version found, setting first version: $NEW_VERSION"
          else
            NEW_VERSION=$(node -p "require('semver').inc('$LATEST_VERSION', 'minor')")
            echo "Incrementing version to: $NEW_VERSION"
          fi

          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

          jq ".version = \"$NEW_VERSION\"" package.json > temp_package.json
          mv temp_package.json package.json

          npm install

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

      - name: redeploy preview
        run: curl https://api.vercel.com/v1/integrations/deploy/prj_dofmmkrthXFDUgvN2qqP6DTAGCj6/zBlucAkow2

      - name: Restore files
        run: |
          git checkout package.json
          git checkout package-lock.json
