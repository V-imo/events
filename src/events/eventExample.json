{
  "name": "event-example",
  "description": "Comprehensive example event demonstrating all supported attribute type patterns.",
  "attributes": [
    {
      "name": "simpleString",
      "type": "string",
      "description": "A basic string value"
    },
    {
      "name": "simpleNumber",
      "type": "number",
      "description": "A basic number value",
      "required": true
    },
    {
      "name": "simpleBoolean",
      "type": "boolean",
      "description": "A basic boolean value"
    },
    {
      "name": "objectAttribute",
      "required": true,
      "attributes": [
        {
          "name": "id",
          "type": "string",
          "description": "Identifier inside an object",
          "required": true
        },
        {
          "name": "count",
          "type": "number",
          "description": "Numeric field inside an object"
        },
        {
          "name": "nested",
          "required": true,
          "attributes": [
            {
              "name": "enabled",
              "type": "boolean",
              "description": "Nested flag"
            },
            {
              "name": "label",
              "type": "string",
              "description": "Nested label",
              "required": true
            }
          ],
          "description": "A nested object attribute"
        }
      ],
      "description": "An attribute whose value is an object with its own fields"
    },
    {
      "name": "stringArray",
      "arrayOf": "string",
      "description": "Array of strings"
    },
    {
      "name": "numberArray",
      "arrayOf": "number",
      "description": "Array of numbers"
    },
    {
      "name": "objectArray",
      "arrayOf": {
        "description": "Value in array of objects",
        "attributes": [
          {
            "name": "title",
            "type": "string",
            "description": "Item title"
          },
          {
            "name": "quantity",
            "type": "number",
            "description": "Item quantity"
          }
        ]
      },
      "description": "Array of objects (each object item has title and quantity)"
    },
    {
      "name": "stringEnum",
      "enum": [
        "low",
        "medium",
        "high"
      ],
      "description": "String enum represented as a union of literals"
    },
    {
      "name": "numberEnum",
      "enum": [
        0,
        1,
        2
      ],
      "description": "Number enum represented as a union of numeric literals"
    },
    {
      "name": "unionPrimitive",
      "oneOf": [
        "string",
        "number"
      ],
      "description": "Value can be a string or a number"
    },
    {
      "name": "unionWithObject",
      "required": true,
      "oneOf": [
        "string",
        {
          "attributes": [
            {
              "name": "code",
              "type": "string",
              "description": "Object variant code"
            },
            {
              "name": "details",
              "required": true,
              "attributes": [
                {
                  "name": "message",
                  "type": "string",
                  "description": "Detail message"
                },
                {
                  "name": "severity",
                  "type": "number",
                  "description": "Detail severity"
                }
              ],
              "description": "Nested details object"
            }
          ],
          "description": "Object variant of the union"
        }
      ],
      "description": "Union of a string or a structured object"
    },
    {
      "name": "unionArray",
      "arrayOf": [
        "string",
        "number"
      ],
      "description": "Array whose items can be string or number",
      "required": true
    }
  ]
}